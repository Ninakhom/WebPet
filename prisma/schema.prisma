// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("NUXT_DATABASE_URL")
}

model Customers {
  C_ID    String @id @db.VarChar(10)
  Cname   String @db.VarChar(30)
  Surname String @db.VarChar(30)
  Tel     String @db.VarChar(11)
  Address String @db.VarChar(50)

  bookings Booking[]
  orders   Orders[]
}

model Booking {
  Booking_ID    String    @id @db.VarChar(10)
  Booking_date  DateTime
  BookingStatus String    @db.VarChar(10)
  C_ID          String    @db.VarChar(10)
  customer      Customers @relation(fields: [C_ID], references: [C_ID])

  bookingDetails Booking_detail[]
}

model Orders {
  Order_ID    String   @id @db.VarChar(10)
  Orderdate   DateTime
  Emp_ID      String   @db.VarChar(10)
  C_ID        String   @db.VarChar(10)
  OrderStatus String   @db.VarChar(20)

  employee Employees       @relation(fields: [Emp_ID], references: [Emp_ID])
  customer Customers       @relation(fields: [C_ID], references: [C_ID])
  details  Orders_detail[]
}

model Orders_detail {
  Ordt_ID   String  @id @db.VarChar(10)
  Ordtprice Decimal
  OrdtQty   Int
  P_ID      String  @db.VarChar(10)
  Order_ID  String  @db.VarChar(10)

  product Products @relation(fields: [P_ID], references: [P_ID])
  order   Orders   @relation(fields: [Order_ID], references: [Order_ID])
}

model Products {
  P_ID           String  @id @db.VarChar(10)
  PName          String  @db.VarChar(30)
  PSalePrice     Decimal
  Pt_ID          String  @db.VarChar(10)
  PInitialPrice  Decimal
  PStockQuantity Int

  type            ProductTypes      @relation(fields: [Pt_ID], references: [PT_ID])
  orderDetails    Orders_detail[]
  purchaseDetails PurchasesDetail[]
}

model ProductTypes {
  PT_ID  String @id @db.VarChar(10)
  PTName String @db.VarChar(30)

  products       Products[]
  bookingDetails Booking_detail[]
}

model Booking_detail {
  Bdt_ID     String @id @db.VarChar(10)
  BdtQty     Int
  Booking_ID String @db.VarChar(10)
  Pt_ID      String @db.VarChar(10)
  S_ID       String @db.VarChar(10)

  booking     Booking      @relation(fields: [Booking_ID], references: [Booking_ID])
  productType ProductTypes @relation(fields: [Pt_ID], references: [PT_ID])
  service     Services     @relation(fields: [S_ID], references: [S_ID])
}

model Purchases {
  Pur_ID    String   @id @db.VarChar(10)
  PurStatus String   @db.VarChar(20)
  PurDate   DateTime
  Sup_ID    String   @db.VarChar(10)
  Emp_ID    String   @db.VarChar(10)

  supplier Suppliers         @relation(fields: [Sup_ID], references: [Sup_ID])
  employee Employees         @relation(fields: [Emp_ID], references: [Emp_ID])
  details  PurchasesDetail[]
}

model Suppliers {
  Sup_ID  String @id @db.VarChar(10)
  SupName String @db.VarChar(30)
  Tel     String @db.VarChar(11)
  Address String @db.VarChar(50)
  Email   String @db.VarChar(30)

  purchases Purchases[]
}

model PurchasesDetail {
  PurDt_ID      String  @id @db.VarChar(10)
  PurDtQuantity Int
  PurDtPrice    Decimal
  PurDtStatus   String  @db.VarChar(10)
  Pur_ID        String  @db.VarChar(10)
  P_ID          String  @db.VarChar(10)

  purchase Purchases @relation(fields: [Pur_ID], references: [Pur_ID])
  product  Products  @relation(fields: [P_ID], references: [P_ID])
}

model Services {
  S_ID         String   @id @db.VarChar(10)
  SName        String   @db.VarChar(30)
  SDescription String?
  SPrice       Decimal
  SDuration    DateTime // หรือ @db.Time ถ้ารองรับ

  bookingDetails Booking_detail[]
}

model Employees {
  Emp_ID     String   @id @db.VarChar(10)
  DOB        DateTime
  EmpName    String   @db.VarChar(50)
  EmpSurname String   @db.VarChar(50)
  Address    String   @db.VarChar(100)
  EmpRole    String   @db.VarChar(20)
  EmpPass    String   @db.VarChar(50)
  Gender     String   @db.Char(1)
  Tel        String   @db.VarChar(11)

  orders    Orders[]
  purchases Purchases[]
}
